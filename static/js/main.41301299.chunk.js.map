{"version":3,"sources":["App.js","index.js"],"names":["MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","useStyles","makeStyles","theme","root","marginTop","spacing","margin","formControl","marginBottom","minWidth","selectEmpty","card","json","fontFamily","jsonPaper","padding","getStyles","value","values","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MultiSelect","selected","handler","label","classes","useTheme","FormControl","className","variant","InputLabel","id","Select","multiple","onChange","input","Input","map","MenuItem","App","useState","lang","role","country","location","image","intro","setJson","handleChange","target","event","oldJson","Fragment","CssBaseline","Container","Card","backgroundColor","CardContent","Typography","component","display","gutterBottom","border","boxShadow","fullWidth","FormLabel","RadioGroup","aria-label","name","FormControlLabel","control","Radio","TextField","multiline","rows","Paper","elevation","JSON","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41301299.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(4),\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(4),\n    minWidth: '31%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  card: {\n    marginBottom: theme.spacing(1),\n  },\n  json: {\n    fontFamily: 'monospace',\n  },\n  jsonPaper: {\n    marginTop: theme.spacing(4),\n    padding: theme.spacing(2),\n  }\n}));\n\nfunction getStyles(value, values, theme) {\n  return {\n    fontWeight:\n      values.indexOf(value) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nconst MultiSelect = ({values, selected, handler, label}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  return (\n    <FormControl className={classes.formControl} variant=\"filled\">\n      <InputLabel id={label}>{label}</InputLabel>\n      <Select\n        multiple\n        value={selected}\n        onChange={handler}\n        input={<Input />}\n        MenuProps={MenuProps}\n      >\n        {values.map((value) => (\n          <MenuItem key={value} value={value} style={getStyles(value, values, theme)}>\n            {value}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n}\n\nfunction App() {\n\n  const classes = useStyles();\n\n  const availableRoles = ['Design', 'Tech', 'Business', 'Student']\n  const availableCountries = ['Belgium', 'Denmark', 'Estonia', 'Finland', 'Germany', 'Sweden']\n  const availableLocations = ['Leuven', 'LiÃ¨ge', 'Copenhagen', 'Tallinn', 'Helsinki', 'Lahti', 'Oulu', 'Tampere', 'Turku', 'Berlin', 'Munich', 'Gothenburg', 'Stockholm']\n\n  const [json, setJson] = useState({\n    lang: 'fi',\n    role: [],\n    country: [],\n    location: [],\n    image: '',\n    intro: ''\n  })\n\n  const handleChange = (target) => (event) => {    \n    setJson(oldJson => ({ ...oldJson, [target]: event.target.value}))\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n\n      <Container className={classes.root}>\n        <Card className={classes.card} style={{ backgroundColor: '#efefef' }}>\n            <CardContent>\n              <Typography variant=\"h3\" component=\"h1\">\n                Little Helper\n              </Typography>\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                It just makes JSON. Reactive.\n              </Typography>\n            </CardContent>\n          </Card>\n          <Card className={classes.card} style={{ border: \"none\", boxShadow: \"none\", backgroundColor: 'inherit' }}>\n            <CardContent>\n              <FormControl fullWidth className={classes.formControl} component=\"fieldset\">\n                <FormLabel component=\"legend\">Language</FormLabel>\n                <RadioGroup aria-label=\"lang\" name=\"lang1\" value={json.lang} onChange={handleChange('lang')}>\n                  <FormControlLabel value=\"fi\" control={<Radio />} label=\"Finnish\" />\n                  <FormControlLabel value=\"en\" control={<Radio />} label=\"English\" />\n                  <FormControlLabel value=\"sv\" control={<Radio />} label=\"Swedish\" />\n                </RadioGroup>\n              </FormControl>\n\n              <MultiSelect values={availableRoles} selected={json.role} handler={handleChange('role')} label=\"Role\"/>\n              <MultiSelect values={availableCountries} selected={json.country} handler={handleChange('country')} label=\"Country\"/>\n              <MultiSelect values={availableLocations} selected={json.location} handler={handleChange('location')} label=\"Location\"/>\n          \n              <FormControl className={classes.formControl} fullWidth component=\"fieldset\">\n                <TextField value={json.image} id=\"image\" fullWidth label=\"Image URL\" variant=\"outlined\" onChange={handleChange('image')} />\n              </FormControl>\n              <FormControl className={classes.formControl} fullWidth component=\"fieldset\">\n                <TextField value={json.intro} id=\"intro\" multiline rows={5} fullWidth label=\"Intro\" variant=\"outlined\" onChange={handleChange('intro')} />\n              </FormControl>\n            </CardContent>\n          </Card>\n            \n          <Paper className={classes.jsonPaper}  elevation={10}>\n            <Typography className={classes.json} variant=\"body1\" component=\"pre\">\n              { JSON.stringify(json, null, 2) }\n            </Typography>\n          </Paper>\n      \n        </Container>\n\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}