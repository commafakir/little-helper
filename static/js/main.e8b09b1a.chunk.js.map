{"version":3,"sources":["App.js","index.js"],"names":["MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","useStyles","makeStyles","theme","root","margin","spacing","formControl","minWidth","selectEmpty","marginTop","getStyles","value","values","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MultiSelect","selected","handler","label","classes","useTheme","FormControl","className","component","InputLabel","id","Select","multiple","onChange","input","Input","map","MenuItem","App","useState","lang","role","country","location","image","intro","json","setJson","handleChange","target","event","oldJson","Fragment","CssBaseline","Container","Typography","variant","Card","CardContent","fullWidth","FormLabel","RadioGroup","aria-label","name","FormControlLabel","control","Radio","TextField","multiline","rows","JSON","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8b09b1a.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '30%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction getStyles(value, values, theme) {\n  return {\n    fontWeight:\n      values.indexOf(value) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nconst MultiSelect = ({values, selected, handler, label}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  return (\n    <FormControl className={classes.formControl} component=\"fieldset\">\n      <InputLabel id={label}>{label}</InputLabel>\n      <Select\n        multiple\n        value={selected}\n        onChange={handler}\n        input={<Input />}\n        MenuProps={MenuProps}\n      >\n        {values.map((value) => (\n          <MenuItem key={value} value={value} style={getStyles(value, values, theme)}>\n            {value}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n}\n\nfunction App() {\n\n  const classes = useStyles();\n\n  const availableRoles = ['Design', 'Tech', 'Business', 'Student']\n  const availableCountries = ['Belgium', 'Denmark', 'Estonia', 'Finland', 'Germany', 'Sweden']\n  const availableLocations = ['Leuven', 'LiÃ¨ge', 'Copenhagen', 'Tallinn', 'Helsinki', 'Lahti', 'Oulu', 'Tampere', 'Turku', 'Berlin', 'Munich', 'Gothenburg', 'Stockholm']\n\n  const [json, setJson] = useState({\n    lang: 'fi',\n    role: [],\n    country: [],\n    location: [],\n    image: '',\n    intro: ''\n  })\n\n  const handleChange = (target) => (event) => {    \n    setJson(oldJson => ({ ...oldJson, [target]: event.target.value}))\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <div className={classes.root}>\n        <Container>\n          <Typography variant=\"heading1\" component=\"h1\">\n            Little Helper\n          </Typography>\n          <Typography variant=\"body1\" component=\"p\">\n            It just makes JSON.\n          </Typography>\n          <Card className={classes.root}>\n            <CardContent>\n              <FormControl fullWidth className={classes.formControl} component=\"fieldset\">\n                <FormLabel component=\"legend\">Language</FormLabel>\n                <RadioGroup aria-label=\"lang\" name=\"lang1\" value={json.lang} onChange={handleChange('lang')}>\n                  <FormControlLabel value=\"fi\" control={<Radio />} label=\"Finnish\" />\n                  <FormControlLabel value=\"en\" control={<Radio />} label=\"English\" />\n                  <FormControlLabel value=\"sv\" control={<Radio />} label=\"Swedish\" />\n                </RadioGroup>\n              </FormControl>\n              <MultiSelect values={availableRoles} selected={json.role} handler={handleChange('role')} label=\"Role\"/>\n              <MultiSelect values={availableCountries} selected={json.country} handler={handleChange('country')} label=\"Country\"/>\n              <MultiSelect values={availableLocations} selected={json.location} handler={handleChange('location')} label=\"Location\"/>\n            </CardContent>\n          </Card>\n          <Card className={classes.root}>\n            <CardContent>\n              <FormControl className={classes.formControl} fullWidth component=\"fieldset\">\n              <TextField value={json.image} id=\"image\" fullWidth label=\"Image URL\" variant=\"outlined\" onChange={handleChange('image')} />\n              </FormControl>\n              <FormControl className={classes.formControl} fullWidth component=\"fieldset\">\n                <TextField value={json.intro} id=\"intro\" multiline rows={5} fullWidth label=\"Intro\" variant=\"outlined\" onChange={handleChange('intro')} />\n              </FormControl>\n            </CardContent>\n          </Card>\n      \n            \n          <Card className={classes.root}>\n            <CardContent>\n              <Typography variant=\"body2\" component=\"pre\">\n                { JSON.stringify(json, null, 2) }\n              </Typography>\n            </CardContent>\n          </Card>\n      \n        </Container>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}